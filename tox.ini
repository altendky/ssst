[tox]
envlist =
    test-py3{6,7,8,9}-{pyqt5,pyside2}
    black
    mypy-py3{6,7,8,9}-{pyqt5,pyside2}
minversion = 3.20.1
requires =
    virtualenv ~=20.2

[qt]
extras=
    pyqt5: pyqt5
    pyside2: pyside2
setenv =
    pyqt5: QT_API = pyqt5
    pyside2: QT_API = pyside2
    pyqt5: SSST_MYPY_QTPY_ARGUMENTS = --always-false=PYQT4 --always-true=PYQT5 --always-false=PYSIDE --always-false=PYSIDE2
    pyside2: SSST_MYPY_QTPY_ARGUMENTS = --always-false=PYQT4 --always-false=PYQT5 --always-false=PYSIDE --always-true=PYSIDE2
    QT_DEBUG_PLUGINS = 1

[python_info]
commands =
    python -m pip freeze --all

[backtracking]
setenv =
    # TODO: Added to avoid backtracking in 20.3+ for now.
    #       See https://github.com/altendky/ssst/issues/14
    VIRTUALENV_PIP = 20.2.4

[testenv:test-py3{6,7,8,9}-{pyqt5,pyside2}]
# Mostly a reminder to use this at some point, but note that it isn't expected to work
# presently.  Also, it is in conflict with the VIRTUALENV_PIP specified to avoid
# backtracking issues.
# https://github.com/tox-dev/tox/issues/1768
# download=true
extras =
    {[qt]extras}
    test
setenv =
    {[backtracking]setenv}
    {[qt]setenv}
commands =
    {[python_info]commands}
    ssst uic
    pytest --verbosity=1 --cov=ssst {posargs:--pyargs ssst}
    coverage xml

[testenv:black]
basepython = python3.8
extras =
    check
setenv =
    {[backtracking]setenv}
# TODO: would be nice to install extras but not package...
#skip_install = true
commands =
    {[python_info]commands}
    black --config {toxinidir}/pyproject.toml --check --diff {toxinidir}

[testenv:format]
basepython = python3.8
extras =
    check
setenv =
    {[backtracking]setenv}
# TODO: would be nice to install extras but not package...
#skip_install = true
commands =
    {[python_info]commands}
    black --config {toxinidir}/pyproject.toml {toxinidir}

[testenv:mypy-py3{6,7,8,9}-{pyqt5,pyside2}]
extras =
    {[qt]extras}
    check
setenv =
    {[backtracking]setenv}
    {[qt]setenv}
# Mypy looks at the source and the .ui files are built into the paths the projct
# is being run from.  To get them to agree we use a develop/--editable install.
usedevelop = true
commands =
    {[python_info]commands}
    ssst uic
    mypy --package ssst --show-error-codes {env:SSST_MYPY_QTPY_ARGUMENTS}

[testenv:codecov]
allowlist_externals =
    bash
    curl
passenv =
    CI
    GITHUB_*
commands =
    curl --output codecov.sh https://codecov.io/bash
    bash codecov.sh -Z -n "{env:JOB_NAME:unspecified}"
